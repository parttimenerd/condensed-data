name: ci

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [17, 21]

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven

    - name: Run tests
      run: mvn clean test

    - name: Run spotless check
      run: mvn spotless:check

    - name: Build package
      run: mvn package -DskipTests

  snapshot-release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Configure Git user
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    - name: Generate snapshot version
      id: version
      run: |
        # Get current version from pom.xml
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Current version: $CURRENT_VERSION"
        
        # Generate timestamp-based snapshot version
        TIMESTAMP=$(date -u +"%Y%m%d.%H%M%S")
        COMMIT_SHA=$(git rev-parse --short HEAD)
        
        if [[ $CURRENT_VERSION == *-SNAPSHOT ]]; then
          BASE_VERSION=${CURRENT_VERSION%-SNAPSHOT}
          SNAPSHOT_VERSION="${BASE_VERSION}-${TIMESTAMP}.${COMMIT_SHA}-SNAPSHOT"
        else
          SNAPSHOT_VERSION="${CURRENT_VERSION}-${TIMESTAMP}.${COMMIT_SHA}-SNAPSHOT"
        fi
        
        echo "snapshot_version=$SNAPSHOT_VERSION" >> $GITHUB_OUTPUT
        echo "Generated snapshot version: $SNAPSHOT_VERSION"

    - name: Set snapshot version
      run: |
        mvn versions:set -DnewVersion=${{ steps.version.outputs.snapshot_version }}
        mvn versions:commit

    - name: Create GitHub release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.snapshot_version }}
        name: Snapshot Release v${{ steps.version.outputs.snapshot_version }}
        body: |
          üöÄ **Automated Snapshot Release**
          
          This is a development snapshot build from commit [`${{ github.sha }}`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}).
          
          **‚ö†Ô∏è Warning**: This is a pre-release snapshot and may be unstable.
          
          **Changes in this commit:**
          ${{ github.event.head_commit.message }}
          
          **CLI Usage:**
          Download the JAR file below and run:
          ```bash
          java -jar condensed-data-${{ steps.version.outputs.snapshot_version }}.jar --help
          ```
        draft: false
        prerelease: true
        files: |
          target/condensed-data.jar
        token: ${{ secrets.GITHUB_TOKEN }}